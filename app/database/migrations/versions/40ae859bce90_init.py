"""init

Revision ID: 40ae859bce90
Revises: 
Create Date: 2023-04-15 20:17:00.557067

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '40ae859bce90'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('post_code', sa.String(), nullable=False),
    sa.Column('street', sa.String(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('house_number', sa.Integer(), nullable=False),
    sa.Column('town', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('beverage',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('stock', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('dough',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('stock', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('topping',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('stock', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customer_order',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('order_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('address_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('order_status', sa.Enum('TRANSMITTED', 'PREPARING', 'IN_DELIVERY', 'COMPLETED', name='orderstatus'), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address_id')
    )
    op.create_table('pizza_type',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('description', sa.String(length=30), nullable=False),
    sa.Column('dough_id', sa.Uuid(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['dough_id'], ['dough.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('order_beverage_quantity',
    sa.Column('order_id', sa.Uuid(), nullable=False),
    sa.Column('beverage_id', sa.Uuid(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['beverage_id'], ['beverage.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['customer_order.id'], ),
    sa.PrimaryKeyConstraint('order_id', 'beverage_id')
    )
    op.create_table('pizza',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('pizza_type_id', sa.Uuid(), nullable=False),
    sa.Column('order_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['customer_order.id'], ),
    sa.ForeignKeyConstraint(['pizza_type_id'], ['pizza_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pizza_type_topping_quantity',
    sa.Column('pizza_type_id', sa.Uuid(), nullable=False),
    sa.Column('topping_id', sa.Uuid(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['pizza_type_id'], ['pizza_type.id'], ),
    sa.ForeignKeyConstraint(['topping_id'], ['topping.id'], ),
    sa.PrimaryKeyConstraint('pizza_type_id', 'topping_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pizza_type_topping_quantity')
    op.drop_table('pizza')
    op.drop_table('order_beverage_quantity')
    op.drop_table('pizza_type')
    op.drop_table('customer_order')
    op.drop_table('user')
    op.drop_table('topping')
    op.drop_table('dough')
    op.drop_table('beverage')
    op.drop_table('address')
    # ### end Alembic commands ###
